var L0000b594009d17c13455 = /* color: #98ff00 */ee.Geometry.MultiPolygon(
        [[[[-90.77819466590881, 42.23562320690858],
           [-90.77824831008911, 42.235504054464556],
           [-90.77812492847443, 42.23542461937688],
           [-90.77800154685974, 42.235293551263645],
           [-90.77794253826141, 42.23510687802637],
           [-90.7779049873352, 42.23501949887453],
           [-90.77772259712219, 42.2348089940574],
           [-90.77762603759766, 42.234669981057365],
           [-90.7775616645813, 42.23451508049667],
           [-90.7774168252945, 42.23422513739964],
           [-90.77729880809784, 42.233915333714414],
           [-90.77710568904877, 42.23367702215246],
           [-90.77696621417999, 42.23348240037606],
           [-90.77683210372925, 42.23329969367245],
           [-90.77674627304077, 42.233097126926246],
           [-90.7766979932785, 42.23297796971304],
           [-90.77712714672089, 42.23292633485077],
           [-90.77741146087646, 42.23291441910733],
           [-90.77773869037628, 42.232862784193095],
           [-90.7780659198761, 42.23277937385776],
           [-90.77834486961365, 42.232799233471404],
           [-90.778768658638, 42.232731710759495],
           [-90.7789134979248, 42.23272773883305],
           [-90.77912271022797, 42.232767458086585],
           [-90.77949285507202, 42.23260460898822],
           [-90.7796162366867, 42.23258872124882],
           [-90.77975034713745, 42.23254900188279],
           [-90.78035652637482, 42.232521198311694],
           [-90.78056573867798, 42.232441759469665],
           [-90.78096807003021, 42.23239012416876],
           [-90.7811450958252, 42.23235437662797],
           [-90.78132748603821, 42.23223918996997],
           [-90.78147768974304, 42.23215577881056],
           [-90.78125774860382, 42.232159750773015],
           [-90.7811826467514, 42.23214783488485],
           [-90.78113436698914, 42.232052507698526],
           [-90.78106462955475, 42.23193334851318],
           [-90.78110754489899, 42.23186582487494],
           [-90.78103244304657, 42.23185788091274],
           [-90.78104317188263, 42.231706945441196],
           [-90.78105390071869, 42.23166325352683],
           [-90.78095734119415, 42.23164339355573],
           [-90.78073740005493, 42.23173077738178],
           [-90.78046917915344, 42.23178241322208],
           [-90.78022241592407, 42.23180227314944],
           [-90.77982544898987, 42.23183404902018],
           [-90.77962160110474, 42.23182213307051],
           [-90.77948212623596, 42.23183404902018],
           [-90.77930510044098, 42.23184199298537],
           [-90.77914416790009, 42.23187774081634],
           [-90.77872574329376, 42.231746665337134],
           [-90.77861845493317, 42.23175460931332],
           [-90.77836096286774, 42.23184199298537],
           [-90.7782107591629, 42.23184993694956],
           [-90.77802836894989, 42.23182610505399],
           [-90.77705204486847, 42.23198895616098],
           [-90.77660143375397, 42.23202073193776],
           [-90.77626883983612, 42.23198101221431],
           [-90.77606499195099, 42.23192143258226],
           [-90.77593088150024, 42.23185788091274],
           [-90.77557682991028, 42.23186582487494],
           [-90.77547490596771, 42.23182610505399],
           [-90.7751852273941, 42.23181418910285],
           [-90.77488481998444, 42.23186582487494],
           [-90.77466487884521, 42.2318817127963],
           [-90.77441275119781, 42.231925404559476],
           [-90.77416062355042, 42.23192937653644],
           [-90.77389776706696, 42.2319849841878],
           [-90.7736188173294, 42.232108115241374],
           [-90.77332377433777, 42.23216372273525],
           [-90.7731306552887, 42.23233054492288],
           [-90.77285706996918, 42.23250928249177],
           [-90.77254056930542, 42.23274759846293],
           [-90.77230989933014, 42.23289455952993],
           [-90.77218651771545, 42.232993857354465],
           [-90.77198266983032, 42.232938250591964],
           [-90.7719075679779, 42.23282306499953],
           [-90.77180027961731, 42.23272773883305],
           [-90.77135503292084, 42.232938250591964],
           [-90.77085614204407, 42.233053435974185],
           [-90.77063620090485, 42.233097126926246],
           [-90.77063620090485, 42.233168621146206],
           [-90.77036261558533, 42.2335618379083],
           [-90.7703572511673, 42.233653190946804],
           [-90.77038943767548, 42.23374851571552],
           [-90.77033042907715, 42.2341774753932],
           [-90.77028751373291, 42.234348264083025],
           [-90.7701587677002, 42.2345230241244],
           [-90.77020704746246, 42.23461040396363],
           [-90.77031433582306, 42.234721614493125],
           [-90.77048599720001, 42.23480105046565],
           [-90.77067911624908, 42.234816937648155],
           [-90.77089369297028, 42.2348248812379],
           [-90.77104926109314, 42.23486062737942],
           [-90.77122628688812, 42.2349678656825],
           [-90.7713121175766, 42.2349678656825],
           [-90.77127456665039, 42.23509893447213],
           [-90.77130675315857, 42.23517439819722],
           [-90.77153742313385, 42.23528957949838],
           [-90.77166080474854, 42.23541270410511],
           [-90.77173590660095, 42.23542461937688],
           [-90.77180027961731, 42.23531341008617],
           [-90.77183246612549, 42.23517042642445],
           [-90.77204167842865, 42.23487254275542],
           [-90.77212750911713, 42.2348288530324],
           [-90.77219188213348, 42.23467395286161],
           [-90.77236354351044, 42.234646150226624],
           [-90.7725191116333, 42.234646150226624],
           [-90.77268540859222, 42.23463026300114],
           [-90.7727712392807, 42.234646150226624],
           [-90.77292680740356, 42.23476530429039],
           [-90.77296435832977, 42.23486459917166],
           [-90.77310919761658, 42.234816937648155],
           [-90.77313601970673, 42.234705727286624],
           [-90.77301800251007, 42.23456671405914],
           [-90.7729160785675, 42.234352235907515],
           [-90.77291071414948, 42.23422116556715],
           [-90.77301800251007, 42.23401860177846],
           [-90.773184299469, 42.23392327741764],
           [-90.77320039272308, 42.23376440316298],
           [-90.77342569828033, 42.23347048473758],
           [-90.77345252037048, 42.23329969367245],
           [-90.77356517314911, 42.23318450873963],
           [-90.7736724615097, 42.23315670544848],
           [-90.77414453029633, 42.232854840356396],
           [-90.77434301376343, 42.23275554231314],
           [-90.77453076839447, 42.232719794979346],
           [-90.77483117580414, 42.232719794979346],
           [-90.77498137950897, 42.23280320539338],
           [-90.7751476764679, 42.232898531445926],
           [-90.77531933784485, 42.23293030676475],
           [-90.77544808387756, 42.23295811015564],
           [-90.77573776245117, 42.23311301453769],
           [-90.7759040594101, 42.233259974753835],
           [-90.7759577035904, 42.23343870969071],
           [-90.77603816986084, 42.23357375352951],
           [-90.77624201774597, 42.233736600127294],
           [-90.77641367912292, 42.233915333714414],
           [-90.77661216259003, 42.234117897834544],
           [-90.77682137489319, 42.234336348608046],
           [-90.77699840068817, 42.23457862949063],
           [-90.77714323997498, 42.234721614493125],
           [-90.77718615531921, 42.23488445812917],
           [-90.77728807926178, 42.23507510380335],
           [-90.7774168252945, 42.23519425705724],
           [-90.7775616645813, 42.23523794652731],
           [-90.77774941921234, 42.23547228044146],
           [-90.77787280082703, 42.235587461199],
           [-90.77806055545807, 42.23562717865283]]],
         [[[-90.7669723033905, 42.240722720650226],
           [-90.76722979545593, 42.240706834954494],
           [-90.76728880405426, 42.24064726355983],
           [-90.76722979545593, 42.240468549038404],
           [-90.76689720153809, 42.240325577056815],
           [-90.76670944690704, 42.24024217658464],
           [-90.7666665315628, 42.240119061400414],
           [-90.76661825180054, 42.24008331823741],
           [-90.7664680480957, 42.24008728970098],
           [-90.76624810695648, 42.24026600530224],
           [-90.76639831066132, 42.240416920304654],
           [-90.76653242111206, 42.24054400634251],
           [-90.7666665315628, 42.240631377845084],
           [-90.76682209968567, 42.240694920680056]]]]);


//Change the following for each lake
var polygon = "0000b594009d17c13455"
var train_date = ee.Date("2005-08-27")

print(L0000b594009d17c13455.area())

//-------------Stays the same for each lake--------------//
//Find the polygon from the NRI database
var NRI = ee.FeatureCollection("users/chalab13/LWB_IA_all_years_geo"),
    NAIP = ee.ImageCollection("USDA/NAIP/DOQQ");

var predict_poly = NRI
  .filterMetadata("system:index", "equals", polygon)
  .geometry()

//Determine month and year of training date
var NAIP_range_year = ee.String(train_date.get('year'));
var NAIP_range_month = ee.String(ee.Algorithms.If(ee.Number(train_date.get('month')).lt(10),
          ee.String("0").cat(ee.String(train_date.get('month'))),
          ee.String(train_date.get('month'))));

//Function to calculate date for end of the month selected
//Non - GEE Functional version
var date_range = function(month, year) {
  var end_range = "";
  if(month == "09" || month == "04" || month == "06" || month == "11"){
    end_range = ee.String(year).cat("-").cat(month).cat("-").cat("30")
  } else {
    if(month == "02"){
      if(year % 4 === 0){
          end_range = ee.String(year).cat("-").cat(month).cat("-").cat("29")
      } else {
          end_range = ee.String(year).cat("-").cat(month).cat("-").cat("28")
      }
    } else {
      end_range = ee.String(year).cat("-").cat(month).cat("-").cat("31")
    }
  }
  return end_range
} // end function date_range()

//Produce a range of dates for the month of the NAIP image (1st through 30th of the month)
var NAIP_range_1 = NAIP_range_year.cat("-").cat(NAIP_range_month).cat("-").cat("01");
var NAIP_range_2 = date_range(NAIP_range_month.getInfo(), NAIP_range_year.getInfo());

//Collect NAIP images
var NAIP = NAIP
  .filterBounds(predict_poly)
  .filterDate(NAIP_range_1, NAIP_range_2)

//Add to map
Map.addLayer(predict_poly.buffer(800))
Map.addLayer(NAIP.select('R','G','B').mosaic().clip(predict_poly.buffer(800)))
Map.centerObject(NAIP, 14)
